% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_gdx.R
\name{convert_gdx}
\alias{convert_gdx}
\title{\code{convert_gdx} writes a converted GDX in the \code{output_directory}.
All parameters and variables from the input \code{gdxfile} are converted
using the \code{convert_table} function. Specific conversion options
are read in the parameter \code{meta_param} also stored in the gdxfile.}
\usage{
convert_gdx(
  gdxfile,
  reg_id,
  time_id,
  output_directory,
  region_mappings = region_mappings,
  time_mappings = time_mappings,
  weights = default_weights,
  guess_input_n = "witch17",
  guess_input_t = "t30",
  default_agg_missing = "zero",
  default_meta_param = witch_default_meta_param()
)
}
\arguments{
\item{gdxfile}{location of the GDX file.}

\item{reg_id}{final regional aggregation.}

\item{time_id}{final time_period aggregation.}

\item{output_directory}{directory where to write the converted GDX}

\item{region_mappings}{a named list of region mapping data.table.}

\item{time_mappings}{a named list of time mapping data.table.}

\item{weights}{a named list of weights used by \code{convert_region}}

\item{guess_input_n}{input regional mapping if not explicitely defined}

\item{guess_input_t}{input time mapping if not explicitely defined}

\item{default_agg_missing}{default parameter to handle missing values in
\code{convert_region}}

\item{default_meta_param}{default meta_param}
}
\description{
\code{convert_gdx} writes a converted GDX in the \code{output_directory}.
All parameters and variables from the input \code{gdxfile} are converted
using the \code{convert_table} function. Specific conversion options
are read in the parameter \code{meta_param} also stored in the gdxfile.
}
\examples{
\dontrun{
convert_gdx('input/build/data_climate.gdx','witch17','t30','data_witch17')
}

}
\seealso{
\code{\link{convert_table}} for single data.table.

Other conversion functions: 
\code{\link{convert_region}()},
\code{\link{convert_table}()},
\code{\link{convert_time_period}()}
}
\concept{conversion functions}
