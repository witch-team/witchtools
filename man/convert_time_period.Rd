% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_time_period.R
\name{convert_time_period}
\alias{convert_time_period}
\title{Convert a data.table from year to time period.}
\usage{
convert_time_period(
  .x,
  time_mapping,
  do_interp = FALSE,
  do_extrap = FALSE,
  do_past_extrap = FALSE,
  year_name = "year",
  value_name = "value",
  fun.aggregate = mean,
  na.rm = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{.x}{a well-formatted data.table.}

\item{time_mapping}{a time mapping data.table.}

\item{do_interp}{logical indicating whether linear interpolation
should be done.}

\item{do_extrap}{logical indicating whether constant extrapolation
should be done.}

\item{do_past_extrap}{logical indicating whether constant extrapolation
should be done for past value.}

\item{year_name}{string column name of year.}

\item{value_name}{string column name of value.}

\item{fun.aggregate}{function to aggregate yearly values in a period.}

\item{na.rm}{logical indicating whether missing values should be removed.}

\item{verbose}{logical indicating whether running in verbose mode.}
}
\value{
a converted data.table
}
\description{
\code{convert_time_period} returns a formatted data.table aggregating
values from years into time periods. The required format of the input data is
described in Details.
}
\details{
The input data.table should contain the columns "year" and "value",
while the other columns are are considered as id columns.
The resulting data.table will have a column "t" instead of "year.
Note that the period, year and value column names can be specified.

The time mapping between year and time period should be provided as
a data.table with columns "year" and "t", and refyear for interpolation and
extrapolation. In case of missing periods, these can be linearly interpolated
or constantly interpolated. If several years are mapped into the same period,
values are averaged or the function \code{fun.aggregate} is used.
}
\examples{

library(data.table)

# original data.table
dd <- data.table(year = 2005:2050, value = 1:46)

# Convert yearly time-serie into time period
convert_time_period(dd, "t30")
}
\seealso{
\code{\link{convert_table}},
\code{\link{convert_gdx}}.

Other conversion functions: 
\code{\link{convert_gdx}()},
\code{\link{convert_region}()},
\code{\link{convert_sqlite}()},
\code{\link{convert_table}()}
}
\concept{conversion functions}
